(function(e) {
	e.fn.Griddler = function(t) {
		function g() {
			var t, s;
			if (n.featureGrid !== "disable") {
				e("#featured_project").append(u[0]);
				if (n.columns > 2 && n.featureGrid === "inline") {
					t = (n.columns - 2) * 2
				} else if (n.columns >= 2 && n.featureGrid === "top") {
					s = Math.ceil((o - 1) / n.columns);
					t = n.columns * Math.floor(s / 2)
				} else {
					t = Math.ceil((o - 1) / n.columns)
				}
				for (i = 1; i < d; i++) {
					if (i <= t) {
						e("#project_top").append(u[i])
					} else {
						e("#project_btm").append(u[i])
					}
				}
			} else {
				s = Math.ceil(o / n.columns);
				t = n.columns * Math.floor(s / 2);
				for (i = 0; i < d; i++) {
					if (i < t) {
						e("#project_top").append(u[i])
					} else {
						e("#project_btm").append(u[i])
					}
				}
			}
			e(r).remove()
		}
		function y(t, n, r) {
			var s = this;
			this.targ = t;
			var o;
			this.width = n;
			this.height = r;
			if (typeof this.targ === "object") {
				o = this.targ[0];
				for (i = 1; i < this.targ.length; i++) {
					o = o + ", " + this.targ[i]
				}
			} else {
				o = this.targ
			}
			e(o).css({
				width : this.width,
				height : this.height
			});
			e(o).find("img").each(function(t) {
				var n = e(this);
				s.imgFillr(n, s.width, s.height)
			})
		}
		function b(t, n) {
			$this = this;
			this.target = t;
			this.iframe = n;
			$lightbox = e("#lightbox");
			this.windowWidth = parseInt(e(window).width(), 10);
			this.windowHeight = parseInt(e(window).height(), 10);
			this.lbPaddingTop = parseInt($lightbox.css("paddingTop"));
			this.lbPaddingRight = parseInt($lightbox.css("paddingRight"));
			this.lbPaddingBottom = parseInt($lightbox.css("paddingBottom"));
			this.lbPaddingLeft = parseInt($lightbox.css("paddingLeft"));
			this.closeWidth = parseInt(e("#close_lightbox").css("width"), 10);
			this.createDisplayElement();
			$lightboxImage = e("#lb_element");
			image = {};
			image.src = this.target.attr("href");
			e("embed, select, object").css("visibility", "hidden");
			this.init()
		}
		function w() {
			function t() {
				var t = o - v >= n.columns * 2 ? n.columns * 2 : o - v;
				var r = Math.ceil(t / n.columns) * p;
				var a = parseInt(e("#" + s + "").css("height"), 10);
				e("#" + s + "").animate({
					height : a + r + 20
				}, 600);
				for (i = 0; i < t; i++) {
					var f = v + i;
					e("#project_btm").append(u[f]);
					e(u[f]).css({
						margin : n.margin,
						overflow : "hidden"
					}).attr("id", "appended_" + f + "");
					e("#appended_" + f + " h2").css({
						fontSize : Math.floor(p * .1)
					});
					new y("#appended_" + f + "", h, p);
					e(u[f]).hover(function() {
						e(".project_info", this).stop(true, true).fadeIn(300);
						e(".project_info h2", this).stop(true, true).animate({
							top : "40%"
						})
					}, function() {
						e(".project_info", this).stop(true, true).fadeOut();
						e(".project_info h2", this).stop(true, true).animate({
							top : "120%"
						}, 300)
					})
				}
				(function() {
					e("#project_btm .project_info").css({
						width : h,
						height : p
					});
					E()
				})();
				v = v + t;
				if (o - v <= 0) {
					e("#griddler_load").hide()
				}
			}
			e(r).css("visibility", "none");
			if (n.featureGrid !== "disable") {
				e("#" + s + "")
						.append(
								m
										+ '<ul id="featured_project"></ul><ul id="project_top"></ul><ul id="project_btm"></ul>');
				e("#featured_project").css("margin", n.margin);
				new y("#featured_project", f - n.margin * 2, l);
				if (n.featureGrid === "top") {
					new y("#project_top", c, p + n.margin)
				} else {
					new y("#project_top", c, l + n.margin)
				}
				e("#project_btm").css("width", a)
			} else {
				e("#" + s + "")
						.append(
								m
										+ '<ul id="project_top"></ul><ul id="project_btm"></ul>');
				e("#project_top, #project_btm").css("width", a)
			}
			g();
			new y([ "#project_top li, #project_btm li" ], h, p);
			e("#project_top li, #project_btm li").css("margin", n.margin);
			new y([ "#featured_project li, #featured_project .project_info" ],
					f - n.margin * 2, l);
			e("#featured_project .project_info").css({
				height : l
			});
			e("#project_top .project_info, #project_btm .project_info").css({
				width : h,
				height : p
			});
			(function() {
				if (d !== 0 && n.expandLimit === true && o - n.gridLimit > 0) {
					e('<div id="griddler_load">Load More</div>').insertAfter(
							"#project_btm");
					e("#griddler_load").click(function() {
						t()
					})
				}
			})();
			var b = parseInt(e("#" + s + "").css("height"), 10);
			e("#" + s + "").css({
				height : b,
				overflow : "hidden"
			})
		}
		function E() {
			e("#" + s + " ul li").click(
					function(t) {
						var n = e(this).children("a");
						if (n.attr("class") === "lightbox"
								|| n.attr("class") === "iframe") {
							t.preventDefault();
							iframe = n.attr("class") === "iframe" ? "true"
									: "false";
							new b(n, iframe)
						} else {
							window.location = n.attr("href")
						}
					});
			e("#close_lightbox").click(function() {
				$this.collapse()
			})
		}
		function S() {
			if (n.rollover == true) {
				e("#featured_project h2").css({
					fontSize : Math.floor(l * .07)
				});
				e("#project_top h2, #project_btm h2").css({
					fontSize : Math.floor(p * .1)
				});
				e("#featured_project li, #project_top li, #project_btm li")
						.hover(
								function() {
									e(".project_info", this).stop(true, true)
											.fadeIn(300);
									e(".project_info h2", this)
											.stop(true, true).animate({
												top : "40%"
											})
								},
								function() {
									e(".project_info", this).stop(true, true)
											.fadeOut();
									e(".project_info h2", this)
											.stop(true, true).animate({
												top : "120%"
											}, 300)
								})
			}
		}
		var n = e.extend({
			ratio : "16:9",
			margin : 5,
			columns : 4,
			featureGrid : "inline",
			rollover : true,
			gridLimit : 13,
			expandLimit : true
		}, t);
		(function() {
			var e = n.ratio.split(":");
			n.ratio = e[1] / e[0];
			if (isNaN(n.ratio) || n.ratio === "undefined") {
				n.ratio = 1
			}
		})();
		var r = this;
		var s = e(r).parent().attr("id");
		var o = e(r).children().length;
		var u = e(r).find("li");
		var a = parseInt(e(r).css("width"), 10) - 1;
		var f = n.columns > 1 && n.featureGrid !== "top" ? a * (2 / n.columns)
				: a;
		var l = f * n.ratio;
		var c;
		if (n.featureGrid !== "top") {
			if (n.columns > 2) {
				c = a - f;
			}
		} else {
			c = f
		}
		var h;
		if (n.featureGrid !== "top") {
			h = f / 2 - n.margin * 2
		} else {
			h = f / n.columns - n.margin * 2
		}
		var p = h * n.ratio;
		var d = Number(n.gridLimit) !== 0 ? n.gridLimit : o;
		var v = d;
		var m = '<div id="lightbox_wrapper"><div id="lightbox"><div id="close_lightbox"></div></div></div>';
		y.prototype.imgFillr = function(e, t, n) {
			this.image1 = e;
			this.width1 = t;
			this.height1 = n;
			this.ratioRule = this.height1 / this.width1;
			this.imageW = parseInt(this.image1.css("width"), 10);
			this.imageH = parseInt(this.image1.css("height"), 10);
			this.ratioImage = this.imageH / this.imageW;
			var r = this.height1;
			var i = this.width1;
			if (this.ratioImage !== this.ratioRule) {
				if (this.ratioImage < this.ratioRule) {
					r = this.height1;
					i = r / this.ratioImage
				} else {
					i = this.width1;
					r = i * this.ratioImage
				}
			}
			this.image1.css({
				width : i,
				height : r
			})
		};
		b.prototype.createDisplayElement = function() {
			if ($this.iframe === "true") {
				var t = this.target.attr("href");
				var n;
				var r;
				var i = t.search("vimeo");
				var s = t.search("youtu");
				if (i === -1 && s === -1) {
					n = $this.windowWidth
							- ($this.lbPaddingLeft + $this.lbPaddingRight
									+ $this.closeWidth + 100);
					r = $this.windowHeight
							- ($this.lbPaddingTop + $this.lbPaddingBottom + 100)
				} else {
					n = 560;
					r = 315
				}
				e(
						'<iframe id="lb_element" src="" width="'
								+ n
								+ '" height="'
								+ r
								+ '" frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>')
						.insertBefore("#close_lightbox")
			} else {
				e('<img id="lb_element" src="" alt="" />').insertBefore(
						"#close_lightbox")
			}
		};
		b.prototype.init = function() {
			_this = this;
			$lightboxImage.attr("src", image.src).css({
				display : "none"
			});
			e("#lightbox_wrapper").show();
			$lightboxImage.load(function() {
				$this.display()
			})
		};
		b.prototype.display = function() {
			paddingVertical = $this.lbPaddingTop + $this.lbPaddingBottom;
			paddingSide = $this.lbPaddingRight + $this.lbPaddingLeft;
			image.width = parseInt($lightboxImage.css("width"), 10);
			image.height = parseInt($lightboxImage.css("height"), 10);
			image.ratio = image.width / image.height;
			if (image.height + paddingSide > $this.windowHeight) {
				image.height = $this.windowHeight - paddingVertical;
				image.width = image.height * image.ratio;
				$lightboxImage.css({
					width : image.width,
					height : image.height
				})
			}
			if (image.width > $this.windowWidth) {
				image.width = $this.windowWidth
						- (paddingSide + $this.closeWidth);
				image.height = image.width * image.ratio;
				$lightboxImage.css({
					width : image.width,
					height : image.height
				})
			}
			$lightbox
					.css(
							"top",
							($this.windowHeight - (image.height + paddingVertical)) / 2);
			$lightbox.animate({
				width : image.width,
				height : image.height
			}, 500, function() {
				$lightboxImage.fadeIn()
			})
		};
		b.prototype.collapse = function() {
			$lightboxImage.stop(true, true).css({
				width : "auto",
				height : "auto",
				display : "none"
			}).remove();
			$lightbox.stop(true, true).css({
				width : "0px",
				height : "0px"
			});
			e("#lightbox_wrapper").stop(true, true).hide();
			e("embed, select, object").css("visibility", "visible")
		};
		w();
		E();
		S()
	}
})(jQuery)